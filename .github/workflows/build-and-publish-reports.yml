name: Build and publish compliance reports
on:
  workflow_dispatch:
    inputs:
      type:
        description: 'Emulate either schedule, push, or pull_request'
        required: true
        default: 'schedule'
        type: choice
        options:
        - schedule
        - push
        - pull_request
  schedule:
    - cron: "0 0 * * 6" # Run at 00:00 on every saturday
  push:
    branches:
      - master
      - main
  pull_request:
    branches: [ main ]
jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - uses: ipfs/aegir/actions/cache-node-modules@master

  check-pinata-compliance:
    runs-on: ubuntu-latest
    needs: [checkout]
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - uses: ipfs/aegir/actions/cache-node-modules@master
      - name: Reports Cache
        uses: actions/cache@v3
        with:
          path: docs
          key: ${{ github.sha }}-pinata
      - run: npm run dev-start -- -s ${{ secrets.PINATA_API_ENDPOINT }} ${{secrets.PINATA_API_TOKEN}}
      - uses: actions/upload-artifact@v2
        with:
          name: pinata-logs
          path: docs/api.pinata.cloud
      - uses: actions/upload-artifact@v2
        with:
          name: pinata-report
          path: docs/api.pinata.cloud.md

  check-estuary-compliance:
    runs-on: ubuntu-latest
    needs: [checkout]
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - uses: ipfs/aegir/actions/cache-node-modules@master
      - name: Reports Cache
        uses: actions/cache@v3
        with:
          path: docs
          key: ${{ github.sha }}-estuary
      - run: npm run dev-start -- -s ${{ secrets.ESTUARY_API_ENDPOINT }} ${{secrets.ESTUARY_API_TOKEN}}
      - uses: actions/upload-artifact@v2
        with:
          name: estuary-logs
          path: docs/api.estuary.tech
      - uses: actions/upload-artifact@v2
        with:
          name: estuary-report
          path: docs/api.estuary.tech.md

  check-nft-dot-storage-compliance:
    runs-on: ubuntu-latest
    needs: [checkout]
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - uses: ipfs/aegir/actions/cache-node-modules@master
      - name: Reports Cache
        uses: actions/cache@v3
        with:
          path: docs
          key: ${{ github.sha }}-nft
      - run: npm run dev-start -- -s ${{ secrets.NFT_API_ENDPOINT }} ${{secrets.NFT_API_TOKEN}}
      - uses: actions/upload-artifact@v2
        with:
          name: nft-logs
          path: docs/nft.storage
      - uses: actions/upload-artifact@v2
        with:
          name: nft-report
          path: docs/nft.storage.md

  check-web3-dot-storage-compliance:
    runs-on: ubuntu-latest
    needs: [checkout]
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - uses: ipfs/aegir/actions/cache-node-modules@master
      - name: Reports Cache
        uses: actions/cache@v3
        with:
          path: docs
          key: ${{ github.sha }}-web3
      - run: npm run dev-start -- -s ${{ secrets.WEB3_API_ENDPOINT }} ${{secrets.WEB3_API_TOKEN}}
      - uses: actions/upload-artifact@v2
        with:
          name: web3-logs
          path: docs/api.web3.storage
      - uses: actions/upload-artifact@v2
        with:
          name: web3-report
          path: docs/api.web3.storage.md

  # Deploy to gh pages branch

  ## Cron jobs
  deploy-from-schedule:
    if: success() && (github.event.schedule != null || github.event.pusher != null || github.event.inputs.type == 'schedule' || github.event.inputs.type == 'push')
    runs-on: ubuntu-latest
    needs: [check-pinata-compliance, check-estuary-compliance, check-nft-dot-storage-compliance, check-web3-dot-storage-compliance]
    concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.
    steps:
      - name: Reports Cache
        uses: actions/cache@v3
        with:
          path: docs
          key: ${{ github.sha }}-pinata
      - name: Reports Cache
        uses: actions/cache@v3
        with:
          path: docs
          key: ${{ github.sha }}-estuary
      - name: Reports Cache
        uses: actions/cache@v3
        with:
          path: docs
          key: ${{ github.sha }}-nft
      - name: Reports Cache
        uses: actions/cache@v3
        with:
          path: docs
          key: ${{ github.sha }}-web3
      - name: Scheduled deployment
        uses: s0/git-publish-subdir-action@399aab378450f99b7de6767f62b0d1dbfcb58b53
        env:
          REPO: self
          BRANCH: gh-pages
          FOLDER: docs
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SQUASH_HISTORY: false
          MESSAGE: "Update published reports with changes from {sha} with message:\n{msg}"
          SKIP_EMPTY_COMMITS: false
